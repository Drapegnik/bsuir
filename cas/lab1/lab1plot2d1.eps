%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 5 Сентябрь 2019 г. 12:33:55 VET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
10.5000 -1.00000 373.985 390.000 rc
0.470588 0 0.0549020 RG
newpath
11.5000 388.000 m
13.4504 375.486 l
15.1476 365.198 l
17.0561 354.271 l
18.9774 343.933 l
20.8895 334.277 l
22.6623 325.866 l
24.4978 317.685 l
26.3962 309.766 l
28.2885 302.398 l
30.2350 295.344 l
31.9494 289.553 l
33.8794 283.486 l
35.8174 277.854 l
37.6850 272.845 l
39.3810 268.634 l
41.3976 264.027 l
43.1060 260.448 l
45.0932 256.641 l
46.8523 253.575 l
48.7822 250.522 l
50.6200 247.902 l
52.5375 245.451 l
54.2984 243.441 l
56.1978 241.517 l
58.1706 239.772 l
59.8880 238.450 l
61.7429 237.216 l
63.6591 236.140 l
65.5338 235.271 l
67.3476 234.591 l
69.3616 234.009 l
71.1712 233.630 l
73.1034 233.364 l
74.8542 233.239 l
76.7683 233.218 l
78.5694 233.299 l
80.4520 233.479 l
82.2925 233.743 l
84.2195 234.101 l
86.0753 234.519 l
87.9732 235.011 l
89.8554 235.557 l
91.5849 236.104 l
93.5671 236.777 l
95.3400 237.415 l
97.2303 238.126 l
99.0396 238.831 l
101.048 239.637 l
102.788 240.350 l
104.762 241.170 l
106.562 241.924 l
108.530 242.752 l
110.228 243.465 l
112.163 244.271 l
114.031 245.042 l
115.898 245.801 l
117.759 246.544 l
119.546 247.242 l
121.478 247.976 l
123.319 248.656 l
125.257 249.347 l
127.011 249.949 l
128.950 250.589 l
130.807 251.174 l
132.660 251.730 l
134.595 252.280 l
136.377 252.759 l
138.202 253.220 l
140.217 253.696 l
142.042 254.097 l
143.908 254.476 l
145.805 254.830 l
147.550 255.129 l
149.409 255.419 l
151.254 255.678 l
153.228 255.925 l
154.970 256.118 l
156.980 256.312 l
158.793 256.462 l
160.588 256.589 l
162.517 256.701 l
164.455 256.791 l
166.218 256.855 l
168.090 256.904 l
169.917 256.937 l
171.897 256.956 l
173.611 256.960 l
175.579 256.954 l
177.429 256.938 l
179.261 256.915 l
181.095 256.887 l
182.965 256.855 l
184.947 256.818 l
186.765 256.785 l
188.559 256.755 l
190.478 256.727 l
192.391 256.706 l
194.109 256.695 l
196.144 256.693 l
197.847 256.702 l
199.838 256.728 l
201.739 256.771 l
203.436 256.824 l
205.345 256.904 l
207.266 257.007 l
209.178 257.134 l
210.951 257.275 l
212.787 257.447 l
214.685 257.653 l
216.577 257.888 l
218.524 258.163 l
220.238 258.435 l
222.168 258.773 l
224.106 259.150 l
225.974 259.548 l
227.670 259.941 l
229.686 260.447 l
231.395 260.909 l
233.382 261.486 l
235.141 262.032 l
237.071 262.670 l
238.909 263.313 l
240.826 264.023 l
242.587 264.709 l
244.486 265.485 l
246.459 266.329 l
248.177 267.094 l
250.032 267.953 l
251.948 268.872 l
253.822 269.802 l
255.636 270.728 l
257.650 271.786 l
259.460 272.759 l
261.392 273.820 l
263.143 274.799 l
265.057 275.884 l
266.858 276.916 l
268.741 278.004 l
272.508 280.190 l
274.364 281.263 l
276.262 282.352 l
278.144 283.418 l
279.874 284.380 l
281.856 285.458 l
283.629 286.393 l
285.519 287.354 l
287.328 288.233 l
289.337 289.154 l
291.077 289.898 l
293.051 290.675 l
294.851 291.312 l
296.819 291.924 l
298.518 292.372 l
300.452 292.783 l
302.320 293.071 l
304.187 293.241 l
306.048 293.285 l
307.835 293.197 l
309.767 292.950 l
311.608 292.554 l
313.546 291.958 l
315.300 291.247 l
317.239 290.260 l
319.096 289.103 l
320.949 287.728 l
322.884 286.044 l
324.666 284.253 l
326.491 282.169 l
328.506 279.555 l
330.331 276.889 l
332.197 273.853 l
334.094 270.427 l
335.839 266.961 l
337.698 262.916 l
339.543 258.526 l
341.517 253.397 l
343.259 248.479 l
345.269 242.329 l
347.082 236.321 l
348.877 229.928 l
350.807 222.535 l
352.744 214.549 l
354.507 206.769 l
356.379 197.951 l
358.206 188.770 l
360.186 178.149 l
361.900 168.375 l
363.868 156.455 l
365.718 144.547 l
367.550 132.057 l
369.384 118.836 l
371.254 104.582 l
373.236 88.5934 l
375.054 73.1079 l
376.849 57.0201 l
378.767 38.9114 l
380.681 19.8709 l
382.485 1.00000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
11.5000 256.440 m
382.485 256.440 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
283 277 13 15 rc
newpath
289.250 283.250 m
289.458 283.468 289.614 283.692 289.718 283.921  c
289.802 284.067 289.927 284.463 290.093 285.109  c
290.656 284.281 l
290.802 284.072 290.981 283.877 291.195 283.695  c
291.408 283.513 291.593 283.385 291.750 283.312  c
291.854 283.270 291.968 283.250 292.093 283.250  c
292.270 283.250 292.414 283.299 292.523 283.398  c
292.632 283.497 292.687 283.614 292.687 283.750  c
292.687 283.916 292.656 284.031 292.593 284.093  c
292.479 284.197 292.343 284.250 292.187 284.250  c
292.093 284.250 292.000 284.229 291.906 284.187  c
291.708 284.125 291.572 284.093 291.500 284.093  c
291.395 284.093 291.276 284.151 291.140 284.265  c
290.880 284.484 290.567 284.911 290.203 285.546  c
290.718 287.718 l
290.802 288.052 290.869 288.252 290.921 288.320  c
290.974 288.388 291.031 288.421 291.093 288.421  c
291.177 288.421 291.281 288.375 291.406 288.281  c
291.635 288.083 291.833 287.828 292.000 287.515  c
292.218 287.625 l
291.947 288.125 291.609 288.541 291.203 288.875  c
290.974 289.062 290.776 289.156 290.609 289.156  c
290.369 289.156 290.182 289.020 290.046 288.750  c
289.953 288.583 289.770 287.875 289.500 286.625  c
288.833 287.770 288.302 288.505 287.906 288.828  c
287.645 289.046 287.395 289.156 287.156 289.156  c
286.989 289.156 286.833 289.093 286.687 288.968  c
286.593 288.875 286.546 288.750 286.546 288.593  c
286.546 288.458 286.593 288.343 286.687 288.250  c
286.781 288.156 286.895 288.109 287.031 288.109  c
287.166 288.109 287.307 288.177 287.453 288.312  c
287.567 288.406 287.656 288.453 287.718 288.453  c
287.760 288.453 287.822 288.421 287.906 288.359  c
288.104 288.192 288.375 287.843 288.718 287.312  c
289.062 286.781 289.286 286.395 289.390 286.156  c
289.130 285.125 288.989 284.583 288.968 284.531  c
288.875 284.250 288.750 284.052 288.593 283.937  c
288.437 283.822 288.203 283.765 287.890 283.765  c
287.796 283.765 287.687 283.770 287.562 283.781  c
287.562 283.546 l
289.250 283.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
11.5000 256.440 m
11.5000 260.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 268 6 13 rc
newpath
16.7968 275.437 m
8.20312 275.437 l
8.20312 274.765 l
16.7968 274.765 l
16.7968 275.437 l
h
f
Q
newpath
15.5312 271.234 m
17.6250 270.218 l
17.8281 270.218 l
17.8281 277.484 l
17.8281 277.963 17.8489 278.263 17.8906 278.382  c
17.9322 278.502 18.0156 278.593 18.1406 278.656  c
18.2656 278.718 18.5208 278.755 18.9062 278.765  c
18.9062 279.000 l
15.6718 279.000 l
15.6718 278.765 l
16.0781 278.755 16.3411 278.718 16.4609 278.656  c
16.5807 278.593 16.6640 278.510 16.7109 278.406  c
16.7578 278.302 16.7812 277.994 16.7812 277.484  c
16.7812 272.843 l
16.7812 272.208 16.7604 271.802 16.7187 271.625  c
16.6875 271.489 16.6328 271.390 16.5546 271.328  c
16.4765 271.265 16.3802 271.234 16.2656 271.234  c
16.1093 271.234 15.8958 271.302 15.6250 271.437  c
15.5312 271.234 l
h
20.9687 274.750 m
20.9687 273.770 21.1171 272.924 21.4140 272.210  c
21.7109 271.497 22.1041 270.968 22.5937 270.625  c
22.9791 270.354 23.3750 270.218 23.7812 270.218  c
24.4375 270.218 25.0260 270.552 25.5468 271.218  c
26.2031 272.052 26.5312 273.182 26.5312 274.609  c
26.5312 275.609 26.3880 276.458 26.1015 277.156  c
25.8151 277.854 25.4479 278.362 25.0000 278.679  c
24.5520 278.997 24.1250 279.156 23.7187 279.156  c
22.8958 279.156 22.2083 278.671 21.6562 277.703  c
21.1979 276.880 20.9687 275.895 20.9687 274.750  c
h
22.2187 274.906 m
22.2187 276.093 22.3645 277.062 22.6562 277.812  c
22.8958 278.437 23.2552 278.750 23.7343 278.750  c
23.9635 278.750 24.2005 278.648 24.4453 278.445  c
24.6901 278.242 24.8750 277.895 25.0000 277.406  c
25.1979 276.687 25.2968 275.661 25.2968 274.328  c
25.2968 273.349 25.1927 272.531 24.9843 271.875  c
24.8385 271.385 24.6406 271.041 24.3906 270.843  c
24.2239 270.708 24.0156 270.640 23.7656 270.640  c
23.4843 270.640 23.2291 270.765 23.0000 271.015  c
22.6979 271.369 22.4921 271.924 22.3828 272.679  c
22.2734 273.434 22.2187 274.177 22.2187 274.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
104.246 256.440 m
104.246 260.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
102 268 6 13 rc
newpath
112.796 275.437 m
104.203 275.437 l
104.203 274.765 l
112.796 274.765 l
112.796 275.437 l
h
f
Q
newpath
115.640 270.390 m
115.140 271.468 l
112.562 271.468 l
112.000 272.625 l
113.114 272.791 114.000 273.208 114.656 273.875  c
115.218 274.447 115.500 275.125 115.500 275.906  c
115.500 276.364 115.408 276.786 115.226 277.171  c
115.044 277.557 114.812 277.885 114.531 278.156  c
114.250 278.427 113.937 278.640 113.593 278.796  c
113.114 279.036 112.614 279.156 112.093 279.156  c
111.583 279.156 111.210 279.067 110.976 278.890  c
110.742 278.713 110.625 278.520 110.625 278.312  c
110.625 278.187 110.674 278.080 110.773 277.992  c
110.872 277.903 110.994 277.859 111.140 277.859  c
111.244 277.859 111.338 277.875 111.421 277.906  c
111.505 277.937 111.645 278.026 111.843 278.171  c
112.166 278.390 112.489 278.500 112.812 278.500  c
113.312 278.500 113.747 278.312 114.117 277.937  c
114.487 277.562 114.671 277.104 114.671 276.562  c
114.671 276.041 114.505 275.557 114.171 275.109  c
113.838 274.661 113.380 274.312 112.796 274.062  c
112.328 273.875 111.697 273.765 110.906 273.734  c
112.562 270.390 l
115.640 270.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 256.440 m
196.992 260.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
193.468 272.750 m
193.468 271.770 193.617 270.924 193.914 270.210  c
194.210 269.497 194.604 268.968 195.093 268.625  c
195.479 268.354 195.875 268.218 196.281 268.218  c
196.937 268.218 197.526 268.552 198.046 269.218  c
198.703 270.052 199.031 271.182 199.031 272.609  c
199.031 273.609 198.888 274.458 198.601 275.156  c
198.315 275.854 197.947 276.362 197.500 276.679  c
197.052 276.997 196.625 277.156 196.218 277.156  c
195.395 277.156 194.708 276.671 194.156 275.703  c
193.697 274.880 193.468 273.895 193.468 272.750  c
h
194.718 272.906 m
194.718 274.093 194.864 275.062 195.156 275.812  c
195.395 276.437 195.755 276.750 196.234 276.750  c
196.463 276.750 196.700 276.648 196.945 276.445  c
197.190 276.242 197.375 275.895 197.500 275.406  c
197.697 274.687 197.796 273.661 197.796 272.328  c
197.796 271.349 197.692 270.531 197.484 269.875  c
197.338 269.385 197.140 269.041 196.890 268.843  c
196.724 268.708 196.515 268.640 196.265 268.640  c
195.984 268.640 195.729 268.765 195.500 269.015  c
195.197 269.369 194.992 269.924 194.882 270.679  c
194.773 271.434 194.718 272.177 194.718 272.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
289.739 256.440 m
289.739 260.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
296.640 270.390 m
296.140 271.468 l
293.562 271.468 l
293.000 272.625 l
294.114 272.791 295.000 273.208 295.656 273.875  c
296.218 274.447 296.500 275.125 296.500 275.906  c
296.500 276.364 296.408 276.786 296.226 277.171  c
296.044 277.557 295.812 277.885 295.531 278.156  c
295.250 278.427 294.937 278.640 294.593 278.796  c
294.114 279.036 293.614 279.156 293.093 279.156  c
292.583 279.156 292.210 279.067 291.976 278.890  c
291.742 278.713 291.625 278.520 291.625 278.312  c
291.625 278.187 291.674 278.080 291.773 277.992  c
291.872 277.903 291.994 277.859 292.140 277.859  c
292.244 277.859 292.338 277.875 292.421 277.906  c
292.505 277.937 292.645 278.026 292.843 278.171  c
293.166 278.390 293.489 278.500 293.812 278.500  c
294.312 278.500 294.747 278.312 295.117 277.937  c
295.487 277.562 295.671 277.104 295.671 276.562  c
295.671 276.041 295.505 275.557 295.171 275.109  c
294.838 274.661 294.380 274.312 293.796 274.062  c
293.328 273.875 292.697 273.765 291.906 273.734  c
293.562 270.390 l
296.640 270.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
382.485 256.440 m
382.485 260.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
382.531 271.234 m
384.625 270.218 l
384.828 270.218 l
384.828 277.484 l
384.828 277.963 384.849 278.263 384.890 278.382  c
384.932 278.502 385.015 278.593 385.140 278.656  c
385.265 278.718 385.520 278.755 385.906 278.765  c
385.906 279.000 l
382.671 279.000 l
382.671 278.765 l
383.078 278.755 383.341 278.718 383.460 278.656  c
383.580 278.593 383.664 278.510 383.710 278.406  c
383.757 278.302 383.781 277.994 383.781 277.484  c
383.781 272.843 l
383.781 272.208 383.760 271.802 383.718 271.625  c
383.687 271.489 383.632 271.390 383.554 271.328  c
383.476 271.265 383.380 271.234 383.265 271.234  c
383.109 271.234 382.895 271.302 382.625 271.437  c
382.531 271.234 l
h
387.968 274.750 m
387.968 273.770 388.117 272.924 388.414 272.210  c
388.710 271.497 389.104 270.968 389.593 270.625  c
389.979 270.354 390.375 270.218 390.781 270.218  c
391.437 270.218 392.026 270.552 392.546 271.218  c
393.203 272.052 393.531 273.182 393.531 274.609  c
393.531 275.609 393.388 276.458 393.101 277.156  c
392.815 277.854 392.447 278.362 392.000 278.679  c
391.552 278.997 391.125 279.156 390.718 279.156  c
389.895 279.156 389.208 278.671 388.656 277.703  c
388.197 276.880 387.968 275.895 387.968 274.750  c
h
389.218 274.906 m
389.218 276.093 389.364 277.062 389.656 277.812  c
389.895 278.437 390.255 278.750 390.734 278.750  c
390.963 278.750 391.200 278.648 391.445 278.445  c
391.690 278.242 391.875 277.895 392.000 277.406  c
392.197 276.687 392.296 275.661 392.296 274.328  c
392.296 273.349 392.192 272.531 391.984 271.875  c
391.838 271.385 391.640 271.041 391.390 270.843  c
391.224 270.708 391.015 270.640 390.765 270.640  c
390.484 270.640 390.229 270.765 390.000 271.015  c
389.697 271.369 389.492 271.924 389.382 272.679  c
389.273 273.434 389.218 274.177 389.218 274.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
30.0492 256.440 m
30.0492 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.5985 256.440 m
48.5985 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
67.1478 256.440 m
67.1478 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
85.6970 256.440 m
85.6970 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
122.795 256.440 m
122.795 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
141.344 256.440 m
141.344 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
159.894 256.440 m
159.894 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
178.443 256.440 m
178.443 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
215.542 256.440 m
215.542 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
234.091 256.440 m
234.091 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
252.640 256.440 m
252.640 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
271.189 256.440 m
271.189 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
308.288 256.440 m
308.288 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
326.837 256.440 m
326.837 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
345.386 256.440 m
345.386 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
363.936 256.440 m
363.936 258.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
196.992 388.000 m
196.992 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
130 121 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
196.992 341.757 m
192.992 341.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 340 6 13 rc
newpath
157.796 347.437 m
149.203 347.437 l
149.203 346.765 l
157.796 346.765 l
157.796 347.437 l
h
f
Q
newpath
156.531 343.234 m
158.625 342.218 l
158.828 342.218 l
158.828 349.484 l
158.828 349.963 158.849 350.263 158.890 350.382  c
158.932 350.502 159.015 350.593 159.140 350.656  c
159.265 350.718 159.520 350.755 159.906 350.765  c
159.906 351.000 l
156.671 351.000 l
156.671 350.765 l
157.078 350.755 157.341 350.718 157.460 350.656  c
157.580 350.593 157.664 350.510 157.710 350.406  c
157.757 350.302 157.781 349.994 157.781 349.484  c
157.781 344.843 l
157.781 344.208 157.760 343.802 157.718 343.625  c
157.687 343.489 157.632 343.390 157.554 343.328  c
157.476 343.265 157.380 343.234 157.265 343.234  c
157.109 343.234 156.895 343.302 156.625 343.437  c
156.531 343.234 l
h
161.968 346.750 m
161.968 345.770 162.117 344.924 162.414 344.210  c
162.710 343.497 163.104 342.968 163.593 342.625  c
163.979 342.354 164.375 342.218 164.781 342.218  c
165.437 342.218 166.026 342.552 166.546 343.218  c
167.203 344.052 167.531 345.182 167.531 346.609  c
167.531 347.609 167.388 348.458 167.101 349.156  c
166.815 349.854 166.447 350.362 166.000 350.679  c
165.552 350.997 165.125 351.156 164.718 351.156  c
163.895 351.156 163.208 350.671 162.656 349.703  c
162.197 348.880 161.968 347.895 161.968 346.750  c
h
163.218 346.906 m
163.218 348.093 163.364 349.062 163.656 349.812  c
163.895 350.437 164.255 350.750 164.734 350.750  c
164.963 350.750 165.200 350.648 165.445 350.445  c
165.690 350.242 165.875 349.895 166.000 349.406  c
166.197 348.687 166.296 347.661 166.296 346.328  c
166.296 345.349 166.192 344.531 165.984 343.875  c
165.838 343.385 165.640 343.041 165.390 342.843  c
165.224 342.708 165.015 342.640 164.765 342.640  c
164.484 342.640 164.229 342.765 164.000 343.015  c
163.697 343.369 163.492 343.924 163.382 344.679  c
163.273 345.434 163.218 346.177 163.218 346.906  c
h
168.468 346.750 m
168.468 345.770 168.617 344.924 168.914 344.210  c
169.210 343.497 169.604 342.968 170.093 342.625  c
170.479 342.354 170.875 342.218 171.281 342.218  c
171.937 342.218 172.526 342.552 173.046 343.218  c
173.703 344.052 174.031 345.182 174.031 346.609  c
174.031 347.609 173.888 348.458 173.601 349.156  c
173.315 349.854 172.947 350.362 172.500 350.679  c
172.052 350.997 171.625 351.156 171.218 351.156  c
170.395 351.156 169.708 350.671 169.156 349.703  c
168.697 348.880 168.468 347.895 168.468 346.750  c
h
169.718 346.906 m
169.718 348.093 169.864 349.062 170.156 349.812  c
170.395 350.437 170.755 350.750 171.234 350.750  c
171.463 350.750 171.700 350.648 171.945 350.445  c
172.190 350.242 172.375 349.895 172.500 349.406  c
172.697 348.687 172.796 347.661 172.796 346.328  c
172.796 345.349 172.692 344.531 172.484 343.875  c
172.338 343.385 172.140 343.041 171.890 342.843  c
171.724 342.708 171.515 342.640 171.265 342.640  c
170.984 342.640 170.729 342.765 170.500 343.015  c
170.197 343.369 169.992 343.924 169.882 344.679  c
169.773 345.434 169.718 346.177 169.718 346.906  c
h
174.968 346.750 m
174.968 345.770 175.117 344.924 175.414 344.210  c
175.710 343.497 176.104 342.968 176.593 342.625  c
176.979 342.354 177.375 342.218 177.781 342.218  c
178.437 342.218 179.026 342.552 179.546 343.218  c
180.203 344.052 180.531 345.182 180.531 346.609  c
180.531 347.609 180.388 348.458 180.101 349.156  c
179.815 349.854 179.447 350.362 179.000 350.679  c
178.552 350.997 178.125 351.156 177.718 351.156  c
176.895 351.156 176.208 350.671 175.656 349.703  c
175.197 348.880 174.968 347.895 174.968 346.750  c
h
176.218 346.906 m
176.218 348.093 176.364 349.062 176.656 349.812  c
176.895 350.437 177.255 350.750 177.734 350.750  c
177.963 350.750 178.200 350.648 178.445 350.445  c
178.690 350.242 178.875 349.895 179.000 349.406  c
179.197 348.687 179.296 347.661 179.296 346.328  c
179.296 345.349 179.192 344.531 178.984 343.875  c
178.838 343.385 178.640 343.041 178.390 342.843  c
178.224 342.708 178.015 342.640 177.765 342.640  c
177.484 342.640 177.229 342.765 177.000 343.015  c
176.697 343.369 176.492 343.924 176.382 344.679  c
176.273 345.434 176.218 346.177 176.218 346.906  c
h
181.468 346.750 m
181.468 345.770 181.617 344.924 181.914 344.210  c
182.210 343.497 182.604 342.968 183.093 342.625  c
183.479 342.354 183.875 342.218 184.281 342.218  c
184.937 342.218 185.526 342.552 186.046 343.218  c
186.703 344.052 187.031 345.182 187.031 346.609  c
187.031 347.609 186.888 348.458 186.601 349.156  c
186.315 349.854 185.947 350.362 185.500 350.679  c
185.052 350.997 184.625 351.156 184.218 351.156  c
183.395 351.156 182.708 350.671 182.156 349.703  c
181.697 348.880 181.468 347.895 181.468 346.750  c
h
182.718 346.906 m
182.718 348.093 182.864 349.062 183.156 349.812  c
183.395 350.437 183.755 350.750 184.234 350.750  c
184.463 350.750 184.700 350.648 184.945 350.445  c
185.190 350.242 185.375 349.895 185.500 349.406  c
185.697 348.687 185.796 347.661 185.796 346.328  c
185.796 345.349 185.692 344.531 185.484 343.875  c
185.338 343.385 185.140 343.041 184.890 342.843  c
184.724 342.708 184.515 342.640 184.265 342.640  c
183.984 342.640 183.729 342.765 183.500 343.015  c
183.197 343.369 182.992 343.924 182.882 344.679  c
182.773 345.434 182.718 346.177 182.718 346.906  c
h
187.968 346.750 m
187.968 345.770 188.117 344.924 188.414 344.210  c
188.710 343.497 189.104 342.968 189.593 342.625  c
189.979 342.354 190.375 342.218 190.781 342.218  c
191.437 342.218 192.026 342.552 192.546 343.218  c
193.203 344.052 193.531 345.182 193.531 346.609  c
193.531 347.609 193.388 348.458 193.101 349.156  c
192.815 349.854 192.447 350.362 192.000 350.679  c
191.552 350.997 191.125 351.156 190.718 351.156  c
189.895 351.156 189.208 350.671 188.656 349.703  c
188.197 348.880 187.968 347.895 187.968 346.750  c
h
189.218 346.906 m
189.218 348.093 189.364 349.062 189.656 349.812  c
189.895 350.437 190.255 350.750 190.734 350.750  c
190.963 350.750 191.200 350.648 191.445 350.445  c
191.690 350.242 191.875 349.895 192.000 349.406  c
192.197 348.687 192.296 347.661 192.296 346.328  c
192.296 345.349 192.192 344.531 191.984 343.875  c
191.838 343.385 191.640 343.041 191.390 342.843  c
191.224 342.708 191.015 342.640 190.765 342.640  c
190.484 342.640 190.229 342.765 190.000 343.015  c
189.697 343.369 189.492 343.924 189.382 344.679  c
189.273 345.434 189.218 346.177 189.218 346.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 256.440 m
192.992 256.440 l
S
Q
q
0 w
newpath
196.992 171.123 m
192.992 171.123 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
156.531 173.234 m
158.625 172.218 l
158.828 172.218 l
158.828 179.484 l
158.828 179.963 158.849 180.263 158.890 180.382  c
158.932 180.502 159.015 180.593 159.140 180.656  c
159.265 180.718 159.520 180.755 159.906 180.765  c
159.906 181.000 l
156.671 181.000 l
156.671 180.765 l
157.078 180.755 157.341 180.718 157.460 180.656  c
157.580 180.593 157.664 180.510 157.710 180.406  c
157.757 180.302 157.781 179.994 157.781 179.484  c
157.781 174.843 l
157.781 174.208 157.760 173.802 157.718 173.625  c
157.687 173.489 157.632 173.390 157.554 173.328  c
157.476 173.265 157.380 173.234 157.265 173.234  c
157.109 173.234 156.895 173.302 156.625 173.437  c
156.531 173.234 l
h
161.968 176.750 m
161.968 175.770 162.117 174.924 162.414 174.210  c
162.710 173.497 163.104 172.968 163.593 172.625  c
163.979 172.354 164.375 172.218 164.781 172.218  c
165.437 172.218 166.026 172.552 166.546 173.218  c
167.203 174.052 167.531 175.182 167.531 176.609  c
167.531 177.609 167.388 178.458 167.101 179.156  c
166.815 179.854 166.447 180.362 166.000 180.679  c
165.552 180.997 165.125 181.156 164.718 181.156  c
163.895 181.156 163.208 180.671 162.656 179.703  c
162.197 178.880 161.968 177.895 161.968 176.750  c
h
163.218 176.906 m
163.218 178.093 163.364 179.062 163.656 179.812  c
163.895 180.437 164.255 180.750 164.734 180.750  c
164.963 180.750 165.200 180.648 165.445 180.445  c
165.690 180.242 165.875 179.895 166.000 179.406  c
166.197 178.687 166.296 177.661 166.296 176.328  c
166.296 175.349 166.192 174.531 165.984 173.875  c
165.838 173.385 165.640 173.041 165.390 172.843  c
165.224 172.708 165.015 172.640 164.765 172.640  c
164.484 172.640 164.229 172.765 164.000 173.015  c
163.697 173.369 163.492 173.924 163.382 174.679  c
163.273 175.434 163.218 176.177 163.218 176.906  c
h
168.468 176.750 m
168.468 175.770 168.617 174.924 168.914 174.210  c
169.210 173.497 169.604 172.968 170.093 172.625  c
170.479 172.354 170.875 172.218 171.281 172.218  c
171.937 172.218 172.526 172.552 173.046 173.218  c
173.703 174.052 174.031 175.182 174.031 176.609  c
174.031 177.609 173.888 178.458 173.601 179.156  c
173.315 179.854 172.947 180.362 172.500 180.679  c
172.052 180.997 171.625 181.156 171.218 181.156  c
170.395 181.156 169.708 180.671 169.156 179.703  c
168.697 178.880 168.468 177.895 168.468 176.750  c
h
169.718 176.906 m
169.718 178.093 169.864 179.062 170.156 179.812  c
170.395 180.437 170.755 180.750 171.234 180.750  c
171.463 180.750 171.700 180.648 171.945 180.445  c
172.190 180.242 172.375 179.895 172.500 179.406  c
172.697 178.687 172.796 177.661 172.796 176.328  c
172.796 175.349 172.692 174.531 172.484 173.875  c
172.338 173.385 172.140 173.041 171.890 172.843  c
171.724 172.708 171.515 172.640 171.265 172.640  c
170.984 172.640 170.729 172.765 170.500 173.015  c
170.197 173.369 169.992 173.924 169.882 174.679  c
169.773 175.434 169.718 176.177 169.718 176.906  c
h
174.968 176.750 m
174.968 175.770 175.117 174.924 175.414 174.210  c
175.710 173.497 176.104 172.968 176.593 172.625  c
176.979 172.354 177.375 172.218 177.781 172.218  c
178.437 172.218 179.026 172.552 179.546 173.218  c
180.203 174.052 180.531 175.182 180.531 176.609  c
180.531 177.609 180.388 178.458 180.101 179.156  c
179.815 179.854 179.447 180.362 179.000 180.679  c
178.552 180.997 178.125 181.156 177.718 181.156  c
176.895 181.156 176.208 180.671 175.656 179.703  c
175.197 178.880 174.968 177.895 174.968 176.750  c
h
176.218 176.906 m
176.218 178.093 176.364 179.062 176.656 179.812  c
176.895 180.437 177.255 180.750 177.734 180.750  c
177.963 180.750 178.200 180.648 178.445 180.445  c
178.690 180.242 178.875 179.895 179.000 179.406  c
179.197 178.687 179.296 177.661 179.296 176.328  c
179.296 175.349 179.192 174.531 178.984 173.875  c
178.838 173.385 178.640 173.041 178.390 172.843  c
178.224 172.708 178.015 172.640 177.765 172.640  c
177.484 172.640 177.229 172.765 177.000 173.015  c
176.697 173.369 176.492 173.924 176.382 174.679  c
176.273 175.434 176.218 176.177 176.218 176.906  c
h
181.468 176.750 m
181.468 175.770 181.617 174.924 181.914 174.210  c
182.210 173.497 182.604 172.968 183.093 172.625  c
183.479 172.354 183.875 172.218 184.281 172.218  c
184.937 172.218 185.526 172.552 186.046 173.218  c
186.703 174.052 187.031 175.182 187.031 176.609  c
187.031 177.609 186.888 178.458 186.601 179.156  c
186.315 179.854 185.947 180.362 185.500 180.679  c
185.052 180.997 184.625 181.156 184.218 181.156  c
183.395 181.156 182.708 180.671 182.156 179.703  c
181.697 178.880 181.468 177.895 181.468 176.750  c
h
182.718 176.906 m
182.718 178.093 182.864 179.062 183.156 179.812  c
183.395 180.437 183.755 180.750 184.234 180.750  c
184.463 180.750 184.700 180.648 184.945 180.445  c
185.190 180.242 185.375 179.895 185.500 179.406  c
185.697 178.687 185.796 177.661 185.796 176.328  c
185.796 175.349 185.692 174.531 185.484 173.875  c
185.338 173.385 185.140 173.041 184.890 172.843  c
184.724 172.708 184.515 172.640 184.265 172.640  c
183.984 172.640 183.729 172.765 183.500 173.015  c
183.197 173.369 182.992 173.924 182.882 174.679  c
182.773 175.434 182.718 176.177 182.718 176.906  c
h
187.968 176.750 m
187.968 175.770 188.117 174.924 188.414 174.210  c
188.710 173.497 189.104 172.968 189.593 172.625  c
189.979 172.354 190.375 172.218 190.781 172.218  c
191.437 172.218 192.026 172.552 192.546 173.218  c
193.203 174.052 193.531 175.182 193.531 176.609  c
193.531 177.609 193.388 178.458 193.101 179.156  c
192.815 179.854 192.447 180.362 192.000 180.679  c
191.552 180.997 191.125 181.156 190.718 181.156  c
189.895 181.156 189.208 180.671 188.656 179.703  c
188.197 178.880 187.968 177.895 187.968 176.750  c
h
189.218 176.906 m
189.218 178.093 189.364 179.062 189.656 179.812  c
189.895 180.437 190.255 180.750 190.734 180.750  c
190.963 180.750 191.200 180.648 191.445 180.445  c
191.690 180.242 191.875 179.895 192.000 179.406  c
192.197 178.687 192.296 177.661 192.296 176.328  c
192.296 175.349 192.192 174.531 191.984 173.875  c
191.838 173.385 191.640 173.041 191.390 172.843  c
191.224 172.708 191.015 172.640 190.765 172.640  c
190.484 172.640 190.229 172.765 190.000 173.015  c
189.697 173.369 189.492 173.924 189.382 174.679  c
189.273 175.434 189.218 176.177 189.218 176.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 85.8055 m
192.992 85.8055 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
160.953 93.3437 m
160.359 95.0000 l
155.281 95.0000 l
155.281 94.7656 l
156.770 93.4010 157.820 92.2864 158.429 91.4218  c
159.039 90.5572 159.343 89.7708 159.343 89.0625  c
159.343 88.5104 159.177 88.0599 158.843 87.7109  c
158.510 87.3619 158.109 87.1875 157.640 87.1875  c
157.224 87.1875 156.846 87.3099 156.507 87.5546  c
156.169 87.7994 155.921 88.1614 155.765 88.6406  c
155.531 88.6406 l
155.635 87.8593 155.906 87.2604 156.343 86.8437  c
156.781 86.4270 157.328 86.2187 157.984 86.2187  c
158.682 86.2187 159.265 86.4427 159.734 86.8906  c
160.203 87.3385 160.437 87.8645 160.437 88.4687  c
160.437 88.9062 160.333 89.3437 160.125 89.7812  c
159.812 90.4687 159.307 91.1927 158.609 91.9531  c
157.557 93.1093 156.895 93.8072 156.625 94.0468  c
158.875 94.0468 l
159.333 94.0468 159.653 94.0286 159.835 93.9921  c
160.018 93.9557 160.184 93.8854 160.335 93.7812  c
160.487 93.6770 160.614 93.5312 160.718 93.3437  c
160.953 93.3437 l
h
161.968 90.7500 m
161.968 89.7708 162.117 88.9244 162.414 88.2109  c
162.710 87.4974 163.104 86.9687 163.593 86.6250  c
163.979 86.3541 164.375 86.2187 164.781 86.2187  c
165.437 86.2187 166.026 86.5520 166.546 87.2187  c
167.203 88.0520 167.531 89.1822 167.531 90.6093  c
167.531 91.6093 167.388 92.4583 167.101 93.1562  c
166.815 93.8541 166.447 94.3619 166.000 94.6796  c
165.552 94.9974 165.125 95.1562 164.718 95.1562  c
163.895 95.1562 163.208 94.6718 162.656 93.7031  c
162.197 92.8802 161.968 91.8958 161.968 90.7500  c
h
163.218 90.9062 m
163.218 92.0937 163.364 93.0625 163.656 93.8125  c
163.895 94.4375 164.255 94.7500 164.734 94.7500  c
164.963 94.7500 165.200 94.6484 165.445 94.4453  c
165.690 94.2421 165.875 93.8958 166.000 93.4062  c
166.197 92.6875 166.296 91.6614 166.296 90.3281  c
166.296 89.3489 166.192 88.5312 165.984 87.8750  c
165.838 87.3854 165.640 87.0416 165.390 86.8437  c
165.224 86.7083 165.015 86.6406 164.765 86.6406  c
164.484 86.6406 164.229 86.7656 164.000 87.0156  c
163.697 87.3697 163.492 87.9244 163.382 88.6796  c
163.273 89.4349 163.218 90.1770 163.218 90.9062  c
h
168.468 90.7500 m
168.468 89.7708 168.617 88.9244 168.914 88.2109  c
169.210 87.4974 169.604 86.9687 170.093 86.6250  c
170.479 86.3541 170.875 86.2187 171.281 86.2187  c
171.937 86.2187 172.526 86.5520 173.046 87.2187  c
173.703 88.0520 174.031 89.1822 174.031 90.6093  c
174.031 91.6093 173.888 92.4583 173.601 93.1562  c
173.315 93.8541 172.947 94.3619 172.500 94.6796  c
172.052 94.9974 171.625 95.1562 171.218 95.1562  c
170.395 95.1562 169.708 94.6718 169.156 93.7031  c
168.697 92.8802 168.468 91.8958 168.468 90.7500  c
h
169.718 90.9062 m
169.718 92.0937 169.864 93.0625 170.156 93.8125  c
170.395 94.4375 170.755 94.7500 171.234 94.7500  c
171.463 94.7500 171.700 94.6484 171.945 94.4453  c
172.190 94.2421 172.375 93.8958 172.500 93.4062  c
172.697 92.6875 172.796 91.6614 172.796 90.3281  c
172.796 89.3489 172.692 88.5312 172.484 87.8750  c
172.338 87.3854 172.140 87.0416 171.890 86.8437  c
171.724 86.7083 171.515 86.6406 171.265 86.6406  c
170.984 86.6406 170.729 86.7656 170.500 87.0156  c
170.197 87.3697 169.992 87.9244 169.882 88.6796  c
169.773 89.4349 169.718 90.1770 169.718 90.9062  c
h
174.968 90.7500 m
174.968 89.7708 175.117 88.9244 175.414 88.2109  c
175.710 87.4974 176.104 86.9687 176.593 86.6250  c
176.979 86.3541 177.375 86.2187 177.781 86.2187  c
178.437 86.2187 179.026 86.5520 179.546 87.2187  c
180.203 88.0520 180.531 89.1822 180.531 90.6093  c
180.531 91.6093 180.388 92.4583 180.101 93.1562  c
179.815 93.8541 179.447 94.3619 179.000 94.6796  c
178.552 94.9974 178.125 95.1562 177.718 95.1562  c
176.895 95.1562 176.208 94.6718 175.656 93.7031  c
175.197 92.8802 174.968 91.8958 174.968 90.7500  c
h
176.218 90.9062 m
176.218 92.0937 176.364 93.0625 176.656 93.8125  c
176.895 94.4375 177.255 94.7500 177.734 94.7500  c
177.963 94.7500 178.200 94.6484 178.445 94.4453  c
178.690 94.2421 178.875 93.8958 179.000 93.4062  c
179.197 92.6875 179.296 91.6614 179.296 90.3281  c
179.296 89.3489 179.192 88.5312 178.984 87.8750  c
178.838 87.3854 178.640 87.0416 178.390 86.8437  c
178.224 86.7083 178.015 86.6406 177.765 86.6406  c
177.484 86.6406 177.229 86.7656 177.000 87.0156  c
176.697 87.3697 176.492 87.9244 176.382 88.6796  c
176.273 89.4349 176.218 90.1770 176.218 90.9062  c
h
181.468 90.7500 m
181.468 89.7708 181.617 88.9244 181.914 88.2109  c
182.210 87.4974 182.604 86.9687 183.093 86.6250  c
183.479 86.3541 183.875 86.2187 184.281 86.2187  c
184.937 86.2187 185.526 86.5520 186.046 87.2187  c
186.703 88.0520 187.031 89.1822 187.031 90.6093  c
187.031 91.6093 186.888 92.4583 186.601 93.1562  c
186.315 93.8541 185.947 94.3619 185.500 94.6796  c
185.052 94.9974 184.625 95.1562 184.218 95.1562  c
183.395 95.1562 182.708 94.6718 182.156 93.7031  c
181.697 92.8802 181.468 91.8958 181.468 90.7500  c
h
182.718 90.9062 m
182.718 92.0937 182.864 93.0625 183.156 93.8125  c
183.395 94.4375 183.755 94.7500 184.234 94.7500  c
184.463 94.7500 184.700 94.6484 184.945 94.4453  c
185.190 94.2421 185.375 93.8958 185.500 93.4062  c
185.697 92.6875 185.796 91.6614 185.796 90.3281  c
185.796 89.3489 185.692 88.5312 185.484 87.8750  c
185.338 87.3854 185.140 87.0416 184.890 86.8437  c
184.724 86.7083 184.515 86.6406 184.265 86.6406  c
183.984 86.6406 183.729 86.7656 183.500 87.0156  c
183.197 87.3697 182.992 87.9244 182.882 88.6796  c
182.773 89.4349 182.718 90.1770 182.718 90.9062  c
h
187.968 90.7500 m
187.968 89.7708 188.117 88.9244 188.414 88.2109  c
188.710 87.4974 189.104 86.9687 189.593 86.6250  c
189.979 86.3541 190.375 86.2187 190.781 86.2187  c
191.437 86.2187 192.026 86.5520 192.546 87.2187  c
193.203 88.0520 193.531 89.1822 193.531 90.6093  c
193.531 91.6093 193.388 92.4583 193.101 93.1562  c
192.815 93.8541 192.447 94.3619 192.000 94.6796  c
191.552 94.9974 191.125 95.1562 190.718 95.1562  c
189.895 95.1562 189.208 94.6718 188.656 93.7031  c
188.197 92.8802 187.968 91.8958 187.968 90.7500  c
h
189.218 90.9062 m
189.218 92.0937 189.364 93.0625 189.656 93.8125  c
189.895 94.4375 190.255 94.7500 190.734 94.7500  c
190.963 94.7500 191.200 94.6484 191.445 94.4453  c
191.690 94.2421 191.875 93.8958 192.000 93.4062  c
192.197 92.6875 192.296 91.6614 192.296 90.3281  c
192.296 89.3489 192.192 88.5312 191.984 87.8750  c
191.838 87.3854 191.640 87.0416 191.390 86.8437  c
191.224 86.7083 191.015 86.6406 190.765 86.6406  c
190.484 86.6406 190.229 86.7656 190.000 87.0156  c
189.697 87.3697 189.492 87.9244 189.382 88.6796  c
189.273 89.4349 189.218 90.1770 189.218 90.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 384.416 m
194.992 384.416 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 299.099 m
194.992 299.099 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 213.781 m
194.992 213.781 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 128.464 m
194.992 128.464 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.992 43.1468 m
194.992 43.1468 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
